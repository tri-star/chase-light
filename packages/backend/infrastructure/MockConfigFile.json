{
  "StateMachines": {
    "repository-monitoring-local": {
      "TestCases": {
        "HappyPathTest": {
          "ListDataSources": "MockedLambdaSuccess",
          "DetectDataSourceUpdates": "MockedDetectUpdatesSuccess",
          "ProcessUpdates": "MockedProcessUpdatesSuccess"
        },
        "ErrorPathTest": {
          "ListDataSources": "MockedLambdaError"
        },
        "EmptyResultTest": {
          "ListDataSources": "MockedLambdaEmpty",
          "DetectDataSourceUpdates": "MockedDetectUpdatesEmpty"
        },
        "SingleItemTest": {
          "ListDataSources": "MockedLambdaSingle"
        },
        "DuplicateIdTest": {
          "ListDataSources": "MockedLambdaDuplicate"
        },
        "InvalidValueTest": {
          "ListDataSources": "MockedLambdaInvalid"
        },
        "ProcessUpdatesErrorTest": {
          "ListDataSources": "MockedLambdaSuccess",
          "DetectDataSourceUpdates": "MockedDetectUpdatesSuccess",
          "ProcessUpdates": "MockedProcessUpdatesError"
        }
      }
    }
  },
  "MockedResponses": {
    "MockedLambdaSuccess": {
      "0": {
        "Return": {
          "StatusCode": 200,
          "Payload": {
            "dataSources": [
              {
                "id": "01234567-89ab-cdef-0123-456789abcdef",
                "sourceType": "github_repository",
                "sourceId": "microsoft/typescript",
                "name": "TypeScript",
                "description": "TypeScript is a superset of JavaScript that compiles to clean JavaScript output.",
                "url": "https://github.com/microsoft/typescript",
                "isPrivate": false,
                "createdAt": "2023-01-15T10:30:00.000Z",
                "updatedAt": "2023-01-15T10:30:00.000Z"
              },
              {
                "id": "12345678-9abc-def0-1234-56789abcdef0",
                "sourceType": "github_repository",
                "sourceId": "facebook/react",
                "name": "React",
                "description": "A declarative, efficient, and flexible JavaScript library for building user interfaces.",
                "url": "https://github.com/facebook/react",
                "isPrivate": false,
                "createdAt": "2023-01-16T11:45:00.000Z",
                "updatedAt": "2023-01-16T11:45:00.000Z"
              },
              {
                "id": "23456789-abcd-ef01-2345-6789abcdef01",
                "sourceType": "github_repository",
                "sourceId": "vercel/next.js",
                "name": "Next.js",
                "description": "",
                "url": "https://github.com/vercel/next.js",
                "isPrivate": true,
                "createdAt": "2022-12-01T08:00:00.000Z",
                "updatedAt": "2022-12-01T08:00:00.000Z"
              },
              {
                "id": "34567890-bcde-f012-3456-789abcdef012",
                "sourceType": "github_repository",
                "sourceId": "vuejs/vue",
                "name": "Vue.js",
                "description": "Progressive JavaScript Framework.",
                "url": "https://github.com/vuejs/vue",
                "isPrivate": false,
                "createdAt": "invalid-date",
                "updatedAt": "2023-02-01T12:00:00.000Z"
              },
              {
                "id": "12345678-9abc-def0-1234-56789abcdef0",
                "sourceType": "github_repository",
                "sourceId": "facebook/react",
                "name": "React Duplicate",
                "description": "Duplicate ID test.",
                "url": "https://github.com/facebook/react",
                "isPrivate": false,
                "createdAt": "2023-01-16T11:45:00.000Z",
                "updatedAt": "2023-01-16T11:45:00.000Z"
              }
            ]
          }
        }
      }
    },
    "MockedLambdaError": {
      "0": {
        "Throw": {
          "Error": "InternalServerError",
          "Cause": "Database connection failed: Unable to connect to PostgreSQL database"
        }
      },
      "1": {
        "Throw": {
          "Error": "ValidationError",
          "Cause": "Invalid dataSourceId format"
        }
      },
      "2": {
        "Throw": {
          "Error": "TimeoutError",
          "Cause": "Lambda execution timed out"
        }
      }
    },
    "SingleItemTest": {
      "ListDataSources": "MockedLambdaSingle"
    },
    "DuplicateIdTest": {
      "ListDataSources": "MockedLambdaDuplicate"
    },
    "InvalidValueTest": {
      "ListDataSources": "MockedLambdaInvalid"
    }
  },
  "MockedLambdaSingle": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "dataSources": [
            {
              "id": "45678901-cdef-0123-4567-89abcdef0123",
              "sourceType": "github_repository",
              "sourceId": "nuxt/nuxt.js",
              "name": "Nuxt.js",
              "description": "The Intuitive Vue Framework",
              "url": "https://github.com/nuxt/nuxt.js",
              "isPrivate": false,
              "createdAt": "2023-03-01T09:00:00.000Z",
              "updatedAt": "2023-03-01T09:00:00.000Z"
            }
          ]
        }
      }
    }
  },
  "MockedLambdaDuplicate": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "dataSources": [
            {
              "id": "12345678-9abc-def0-1234-56789abcdef0",
              "sourceType": "github_repository",
              "sourceId": "facebook/react",
              "name": "React",
              "description": "A declarative, efficient, and flexible JavaScript library for building user interfaces.",
              "url": "https://github.com/facebook/react",
              "isPrivate": false,
              "createdAt": "2023-01-16T11:45:00.000Z",
              "updatedAt": "2023-01-16T11:45:00.000Z"
            },
            {
              "id": "12345678-9abc-def0-1234-56789abcdef0",
              "sourceType": "github_repository",
              "sourceId": "facebook/react",
              "name": "React Duplicate",
              "description": "Duplicate ID test.",
              "url": "https://github.com/facebook/react",
              "isPrivate": false,
              "createdAt": "2023-01-16T11:45:00.000Z",
              "updatedAt": "2023-01-16T11:45:00.000Z"
            }
          ]
        }
      }
    }
  },
  "MockedLambdaInvalid": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "dataSources": [
            {
              "id": "invalid-id",
              "sourceType": "github_repository",
              "sourceId": "invalid/source",
              "name": "Invalid Source",
              "description": "Invalid test case.",
              "url": "not-a-url",
              "isPrivate": "not-a-boolean",
              "createdAt": "not-a-date",
              "updatedAt": "not-a-date"
            }
          ]
        }
      }
    }
  },
  "MockedLambdaEmpty": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "dataSources": []
        }
      }
    }
  },
  "MockedLambdaInvalid": {
    "0": {
      "Throw": {
        "Error": "States.TaskFailed",
        "Cause": "Invalid input parameter"
      }
    }
  },
  "MockedDetectUpdatesSuccess": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "newEventIds": [
            "event-01234567-89ab-cdef-0123-456789abcdef",
            "event-fedcba98-7654-3210-fedc-ba9876543210",
            "event-abcdef01-2345-6789-abcd-ef0123456789"
          ]
        }
      }
    }
  },
  "MockedDetectUpdatesEmpty": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "newEventIds": []
        }
      }
    }
  },
  "MockedProcessUpdatesSuccess": {
    "0": {
      "Return": {
        "StatusCode": 200,
        "Payload": {
          "processedEventIds": [
            "event-01234567-89ab-cdef-0123-456789abcdef",
            "event-fedcba98-7654-3210-fedc-ba9876543210"
          ],
          "failedEventIds": ["event-abcdef01-2345-6789-abcd-ef0123456789"]
        }
      }
    }
  },
  "MockedProcessUpdatesError": {
    "0": {
      "Throw": {
        "Error": "States.TaskFailed",
        "Cause": "OpenAI API rate limit exceeded"
      }
    }
  }
}
